name: Build
on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest
    # skip whilst tests are broken
    if: ${{ 'true' == 'false' }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: '16'
          cache: 'yarn'
      - run: npm i -g yarn
      - run: sudo curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add
      - run: sudo echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list
      - run: sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get install google-chrome-stable unzip xvfb libxi6 libgconf-2-4 -y
      - run: wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip && unzip chromedriver_linux64.zip
      - run: sudo mv chromedriver /usr/bin/chromedriver && sudo chmod +x /usr/bin/chromedriver
      - run: yarn install
      - run: yarn run test
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: '16'
          cache: 'yarn'
      - run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install fakeroot dpkg flatpak-builder unzip zip rpm nodejs git python make gcc g++ elfutils wine -y
      - run: sudo flatpak remote-add --system --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      - run: sudo flatpak install --system --no-deps --assumeyes --noninteractive runtime/org.freedesktop.Sdk/x86_64/19.08
      - run: sudo flatpak install --system --no-deps --assumeyes --noninteractive runtime/org.freedesktop.Platform/x86_64/19.08
      - run: sudo flatpak install --system --no-deps --assumeyes --noninteractive app/org.electronjs.Electron2.BaseApp/x86_64/stable
      - run: npm i -g yarn
      - run: yarn install
      - name: Build linux
        run: yarn run make -p linux
      - name: Build windows
        run: yarn run make -p win32
      - uses: actions/upload-artifact@v2
        with:
          name: artifacts_linux
          path: |
            out/make/**/*.deb
            out/make/**/*.rpm
            out/make/**/*.flatpak
            out/make/**/*.exe
          retention-days: 1
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - run: curl -L -o sd https://github.com/chmln/sd/releases/download/v0.7.6/sd-v0.7.6-x86_64-unknown-linux-gnu
      - run: sudo chmod +x sd
      - run: sudo apt-get update && sudo apt-get install jq -y
      - run: echo "PACKAGE_VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2
        with:
          name: artifacts_linux
      - run: ls -l
      - uses: "marvinpinto/action-automatic-releases@latest"
        id: create-release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.PACKAGE_VERSION }}"
          prerelease: true
          title: "v${{ env.PACKAGE_VERSION }}"
          files: |
            deb/**/*.deb
            flatpak/**/*.flatpak
            rpm/**/*.rpm
            squirrel.windows/**/*.exe
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.automatic_releases_tag }}
